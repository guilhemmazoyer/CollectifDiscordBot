import config, { pronounRoles, skillRoles } from "../config.js";

const ROLE_MEMBER_ID = config.roles.member;
const MESSAGE_CHART_ID = config.messages.chart; // Charte
const MESSAGE_PRONOM_ID = config.messages.pronom; // Choix du pronom
const MESSAGE_SKILL_ID = config.messages.skill; // Choix des comp√©tences

export const name = "messageReactionRemove";

export async function execute(reaction, user) {
  if (reaction.partial) await reaction.fetch();
  if (reaction.message.partial) await reaction.message.fetch();
  if (user.bot) return;

  const guild = reaction.message.guild;
  if (!guild) return;

  const member = await guild.members.fetch(user.id).catch(() => null);
  if (!member) return;

  // --- Gestion de l'√©tat membre √† visiteur
  if (reaction.message.id === MESSAGE_CHART_ID) {
    if(reaction.emoji.name !== config.emojis.validate) return;
    await member.roles.remove(ROLE_MEMBER_ID).catch(console.error);
    console.log(`R√¥le membre retir√© √† ${user.tag}`);
    return;
  }

  // --- Gestion des r√¥les de pronom
  if (reaction.message.id === MESSAGE_PRONOM_ID) {
    const emoji = reaction.emoji.name;
    const roleId = pronounRoles[reaction.emoji.name];
    if (!roleId) {
      console.log("Aucun r√¥le trouv√© pour cet emoji :", emoji);
      return;
    }

    await member.roles.remove(roleId).catch(console.error);
    console.log(`üè∑Ô∏è R√¥le de pronom retir√© (${emoji}) √† ${user.tag}`);
  }

  // --- Gestion des r√¥les de comp√©tence
  if (reaction.message.id === MESSAGE_SKILL_ID) {
    const emoji = reaction.emoji.name;
    const roleId = skillRoles[reaction.emoji.name];
    if (!roleId) {
      console.log("Aucun r√¥le trouv√© pour cet emoji :", emoji);
      return;
    }

    await member.roles.remove(roleId).catch(console.error);
    console.log(`üè∑Ô∏è R√¥le de comp√©tence retir√© (${emoji}) √† ${user.tag}`);
  }
}